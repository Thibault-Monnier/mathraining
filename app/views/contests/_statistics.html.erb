<h3>Distribution des scores</h3>

<% nb_prob = @contest.contestproblems.count %>
<% num_ranked = 0 %>
<% num_points = 7*nb_prob %>
<% num_by_medal = [] %>
<% (0..4).each do |i| %>
  <% num_by_medal[i] = Array.new(num_points+1, 0) %>
<% end %>
<% num_all = Array.new(num_points+1, 0) %>

<% @contest.contestscores.order(:rank).each do |line| %>
  <% num_ranked = num_ranked + 1 %>
  <% medal = Contestscore.medals[line.medal] %>
  <% if medal < 0 %>
    <% medal = 0 %>
  <% end %>
  <% num_by_medal[medal][line.score] = num_by_medal[medal][line.score] + 1 %>
  <% num_all[line.score] = num_all[line.score] + 1 %>
<% end %>

<center>

<!-- Endroit pour dessiner le graphique des scores -->
<div id="contenant" class="mt-3" style="width:100%; max-width:900px; height:280px; position:relative; display:block;">
<canvas id="myCanvas" width="900" height="280" style="position:absolute; left:0px; top:0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>

</center>


<script type="text/javascript">
  function respondCanvas(){
    // Check light or dark theme
    var is_dark = (document.documentElement.getAttribute('data-bs-theme') == 'dark');
  
    // Get the canvas & context
    var c = document.getElementById('myCanvas');
    var ctx = c.getContext('2d');
    var container = c.parentElement;
    
    var W = 900.0;
    var H = 280.0;
    
    c.setAttribute('width', container.offsetWidth); //max width
    c.setAttribute('height', H * container.offsetWidth / W); //max height

    container.style.height = H * container.offsetWidth / W + "px"

    // Draw content
    
    var maxScore = <%= num_points %>;
    var maxNum = <%= num_all.max %>;

    var pct = c.offsetWidth / W;
    var W_real = pct * W;
    var H_real = pct * H;
    var W_offset = 30;
    var H_offset = 5;
    var W_size = W_real - W_offset - 30;
    var H_size = H_real - H_offset - 30;
    var W_step = W_size / (maxScore + 1);
    var H_step = (0.8 * H_size) / maxNum;
    if (maxNum > 16) {
      H_step = (0.95 * H_size) / (maxNum + 3);
    }
    
    ctx.beginPath();
    ctx.rect(W_offset, H_offset, W_size, H_size);
    ctx.fillStyle = (is_dark ? 'rgb(33, 37, 41)' : 'white');
    ctx.fill();
    ctx.lineWidth = 1;
    ctx.strokeStyle = (is_dark ? 'white' : 'black');
    ctx.stroke();
    
    // Entre 50 et 856 --> largeur totale 806, à diviser en num_points
    
    var medal_color = ["#9999FF", "#FF70B7", "#DF7F32", "#C4C4C4", "#FFD700"];
    var num_by_medal = [<%= ruby_to_javascript(num_by_medal[0]) %>, <%= ruby_to_javascript(num_by_medal[1]) %>, <%= ruby_to_javascript(num_by_medal[2]) %>, <%= ruby_to_javascript(num_by_medal[3]) %>, <%= ruby_to_javascript(num_by_medal[4]) %>];
    for (let score = 1; score <= maxScore; score++) {
      var start = 0;
      for (let j = 0; j < 5; j++) {
        var k = 4-j;
        ctx.fillStyle = medal_color[k];
        if (num_by_medal[k][score] > 0) {
          v = num_by_medal[k][score]
          ctx.beginPath();
          ctx.rect(W_offset + W_step * score, H_offset + H_size - H_step * start, W_step, - H_step * v);
          ctx.fill();
          ctx.stroke();
          start = start + v
        }
      }
    }
    
    ctx.beginPath();
    
    ctx.font = "12px Arial";
    ctx.fillStyle = (is_dark ? 'white' : 'black');
    ctx.textAlign = 'center';
    
    var W_last = W_real * 2;
    for (let i = maxScore; i >= 0; i -= 7) {
      var W_cur = W_offset + W_step * (i + 0.5);
      if (W_cur < W_last - 20) {
        ctx.moveTo(W_cur, H_offset + H_size);
        ctx.lineTo(W_cur, H_offset + H_size + 2);
        ctx.fillText(i.toString(), W_cur, H_offset + H_size + 15);
        W_last = W_cur;
      }
    }
    
    ctx.textAlign = 'right';
    
    var H_last = -H_real;
    for (let i = maxNum; i >= 0; i--) {
      var H_cur = H_offset + H_size - H_step * i;
      if (H_cur > H_last + 20) {
        ctx.moveTo(W_offset, H_cur);
        ctx.lineTo(W_offset - 2, H_cur);
        ctx.fillText(i.toString(), W_offset - 6, H_cur + 4);
        H_last = H_cur;
      }
    }
    
    ctx.stroke();
  }

  window.addEventListener("resize", () => {
    respondCanvas();
  });
  
  window.addEventListener("theme-change", () => {
    respondCanvas();
  });
  
  respondCanvas();
</script>

<h3>Scores par problème</h3>

<% allprobs = @contest.contestproblems.order(:number) %>
    
<% problem_point = [] %>
<% allprobs.each do |p| %>
  <% problem_point[p.number] = [] %>
  <% (1..7).each do |i| %>
    <% problem_point[p.number][i] = 0 %>
  <% end %>
  <% problem_point[p.number][0] = num_ranked %>
  <% p.contestsolutions.each do |s| %>
    <% if s.score > 0 && !s.official %>
      <% problem_point[p.number][s.score] = problem_point[p.number][s.score] + 1 %>
      <% problem_point[p.number][0] = problem_point[p.number][0] - 1 %>
    <% end %>
  <% end %>
<% end %>

<div class="mt-3" style="width:100%; overflow-x:auto;">
<center>
<% width_name = 120 %>
<% width_point = 45 %>
<% width_average = 90 %>
<% width_table = width_name + 8 * width_point + width_average %>
<table class="table table-bordered mb-0" style="min-width:<%= width_table %>px; width:<%= width_table %>px;">
<tr class="table-ld-header">
<th style="width:<%= width_name %>px;"></th>
<th class="text-center" style="width:<%= width_point %>px;">0 *</th>
<% (1..7).each do |i| %>
  <th class="text-center" style="width:<%= width_point %>px;"><%= i %></th>
<% end %>
<th class="text-center" style="width:<%= width_average %>px;">Moyenne</th>
</tr>

<% allprobs.each do |p| %>
  <tr>
  <td>
    <% if @signed_in %>
      <%= link_to "Problème ##{ p.number }", contestproblem_path(p) %>
    <% else %>
      <%= "Problème ##{ p.number }" %>
    <% end %>
  </td>
  <% average = 0.0 %>
  <% (0..7).each do |i| %>
    <td id="num-<%= i %>-<%= p.id %>" class="text-center"><%= problem_point[p.number][i] > 0 ? problem_point[p.number][i] : "-" %></td>
    <% average += i * problem_point[p.number][i] %>
  <% end %>
  <% average /= num_ranked %>
  <td id="average-<%= p.id %>" class="text-center"><%= ("%.2f" % average) %></td>
  </tr>
<% end %>
</table>
</center>
</div>

<p class="mt-2 text-center fst-italic">* En considérant que tous les participants classés ont essayé tous les problèmes.</p>
