<% if !defined?(disable_correction) %>
  <% disable_correction = false %>
<% end %>
<% if !defined?(show_savedreplies) %>
  <% show_savedreplies = false %>
<% end %>
<% if !defined?(can_close_submission_directly) %>
  <% can_close_submission_directly = false %>
<% end %>

<div id="theCorrection">
<h4>Poster un commentaire</h4>

<%= form_for @correction, url: submission_corrections_path(@submission), :html => { :multipart => true } do |f| %>
  <%= render 'shared/error_messages', object: f.object %>
  <div class="mb-2">
    <%= render 'shared/preview' %>
    <%= render 'shared/smiley' %>
    <%= f.text_area :content, :class => "form-control to-enable", :maxlength => "8000", :style => "height:200px;", :id => "MathInput", :oninput => "Preview.MyUpdate()", :disabled => disable_correction %>
    <script>initAndUpdatePreviewSafeWhenPossible()</script>
    <script>initLeavingFormWhenPossible()</script>
  </div>
  
  <% if show_savedreplies %>
    <%= f.hidden_field :savedreplies_used, value: "" %>
    <%= render 'savedreplies/index', disable: disable_correction %>
  <% end %>
  
  <%= render 'shared/edit_files', disable: disable_correction %>

  <%= hidden_field_tag "last_comment_id", @lastid %>

  <!-- Si administrateur ou correcteur : tous les boutons différents -->
  <% if current_user != @submission.user %>
    <% if current_user.correction_level == 0 %>
      <p class="mb-2">N'hésitez pas à faire des commentaires, même minimes, pouvant permettre à l'étudiant de progresser. On signalera par exemple une erreur de notation, un oubli de cas particulier, une suggestion d'amélioration... Si une grosse partie est manquante, alors on refusera la solution en demandant de la compléter.</p>
    <% end %>
    <% if @submission.wrong? %>
      <%= render 'corrections/buttons', f: f, disable_correction: disable_correction, show_simple: true, show_accept: true, show_close: true %>
    <% elsif @submission.correct? %>
      <%= render 'corrections/buttons', f: f, disable_correction: disable_correction, show_simple: true %>
    <% elsif @submission.wrong_to_read? %>
      <%= render 'corrections/buttons', f: f, disable_correction: disable_correction, show_accept: true, show_reject: true, show_close: true %>
    <% else %>
      <% if @submission.intest && @submission.score == -1 %>
        <div class="mb-2">
        <label for="score" class="form-label">Score attribué (sur 7)</label>
        <%= number_field_tag "score", nil, :min => 0, :max => 7, :class => "form-control", :style => "width:70px;" %>
        </div>
        
        <div class="card mb-3">
          <h5 class="card-header">Marking scheme</h5>
          <div class="card-body"><%= htmlise(@problem.markscheme) %></div>
        </div>
        
        <p class="mb-2">Veuillez accepter ou refuser la solution indépendamment du score attribué, comme pour un problème normal.</p>
      <% end %>
      <%= render 'corrections/buttons', f: f, disable_correction: disable_correction, show_reject: true, show_accept: true, show_close: can_close_submission_directly %>
    <% end %>

  <!-- Si étudiant, simple bouton -->
  <% else %>
    <%= f.submit "Poster", class: "btn btn-primary mb-3", :disabled => (disable_correction || in_skin?) %>
  <% end %>
<% end %>
</div>

<% if @correction.errors.any? %>
  <script>rollingShowusWhenPossible("Correction")</script>
<% end %>

