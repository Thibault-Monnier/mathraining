<!DOCTYPE html>
<html>
  <head>
  <script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      tex2jax: {
        inlineMath: [ ['$','$'] ],
        processEscapes: true
      },
      "HTML-CSS": {
        mtextFontInherit: true,
        linebreaks: { automatic: true }
      },
      CommonHTML: {
        linebreaks: { automatic: true }
      },
      SVG: {
        linebreaks: { automatic: true }
      },
      messageStyle: "simple" 
    })
    </script>
    
    <!-- Fix for the bug on Safari/IOS : will be included in the version 2.7.5 of Mathjax -->
    <script type="text/x-mathjax-config">
    MathJax.Hub.Register.StartupHook("HTML-CSS Jax Ready", function () {
      var HTMLCSS = MathJax.OutputJax["HTML-CSS"];
      var postTranslate = HTMLCSS.postTranslate;
      HTMLCSS.Augment({
        postTranslate: function (state, partial) {
          var scripts = state.jax[this.id];
          for (var i = state.HTMLCSSlast, m = state.HTMLCSSeqn; i < m; i++) {
            var script = scripts[i];
            if (script && script.parentNode && script.MathJax.elementJax) {
              if (script.MathJax.preview) {
                script.MathJax.preview.innerHTML = "";
                delete script.MathJax.preview;
              }
            }
          }
          postTranslate.call(this, state, partial);
        }
      });
    });
    MathJax.Hub.Register.StartupHook("CommonHTML Jax Ready", function () {
      var CHTML = MathJax.OutputJax.CommonHTML;
      var postTranslate = CHTML.postTranslate;
      CHTML.Augment({
        postTranslate: function (state) {
          var scripts = state.jax[this.id];
          for (var i = state.CHTMLlast, m = state.CHTMLeqn; i < m; i++) {
            var script = scripts[i];
            if (script && script.MathJax.elementJax) {
              var data = script.MathJax.elementJax.CHTML;
              if (data.preview) {
                data.preview.innerHTML = "";
                delete data.preview;
              }
            }
          }
          postTranslate.call(this, state);
        }
      });
    });
    </script>
    
    <!-- <script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script> -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    <% if @signed_in && current_user.accept_analytics %>
      <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-98829108-1', 'auto');
        ga('send', 'pageview');
      </script>
    <% end %>
    <title><%= full_title(yield(:title)) %></title>
    <link rel="apple-touch-icon" sizes="57x57" href="/icon-57.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/icon-76.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/icon-120.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/icon-152.png">
    <link rel="apple-touch-icon" sizes="167x167" href="/icon-167.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/icon-180.png">
    <link rel="icon" sizes="192x192" href="/icon-192.png">
    <link rel="icon" sizes="128x128" href="/icon-128.png">
    <%= stylesheet_link_tag 'application', :media => 'screen, projection' %>
    <%= stylesheet_link_tag 'application-print', :media => 'print' %>
    <%= javascript_include_tag "application" %>
    <%= yield :javascript_includes %>
    <%= csrf_meta_tags %>
  <%= render 'layouts/shim' %>

  <% # mathjax_tag %>
    <meta name="viewport" content="width=device-width, initial-scale=1">
  </head>
  <body>
    <%= render 'layouts/header' %>
    <div class="container">
        <% flash.each do |key, value| %>
          <%= content_tag(:div, value, class: "alert alert-#{key}", style: "padding:10px; margin-top:20px;") %>
        <% end %>
        <%= yield %>
        <%= render 'layouts/footer' %>
        <%= debug(params) if Rails.env.development? %>
    </div>
  </body>
</html>
