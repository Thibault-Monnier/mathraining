<% provide(:title, 'Graphe') %>

<h1><%= title_2("Théorie", "Modifier la structure des sections") %></h1>

<% section_is_fondation = Array.new %>
<% Section.all.each do |s| %>
  <% section_is_fondation[s.id] = s.fondation? %>
<% end %>

<!-- Graphique des prérequis -->
<script type="module">
  import { Graph, Node, Edge, Layout, Vector, Renderer } from "custom/springy"
  window.Graph = Graph
  window.Node = Node
  window.Edge = Edge
  window.Layout = Layout
  window.Vector = Vector
  window.Renderer = Renderer
  import "custom/springyui"

  function decitohexa(dose){
    var deux = dose % 16;
    var un = Math.floor(dose/16);
    var x, y;
    var lettres = new Array("A", "B", "C", "D", "E", "F");
    if(un <= 9)
    {
      x = un.toString();
    }
    else
    {
      x = lettres[un-10];
    }
    if(deux <= 9)
    {
      y = deux.toString();
    }
    else
    {
      y = lettres[deux-10];
    }
    return x.concat(y);
  }
  
  var couleurmax = [[0, 0, 200], [0, 200, 200], [0, 100, 230], [200, 0, 200], [150, 0, 0], [150, 150, 0], [100, 100, 100]]
  
  function coucou(a, b, i){
    var dose1 = 255-Math.floor(couleurmax[i][0]*a/b);
    var dose2 = 255-Math.floor(couleurmax[i][1]*a/b);
    var dose3 = 255-Math.floor(couleurmax[i][2]*a/b);
    return decitohexa(dose1).concat(decitohexa(dose2)).concat(decitohexa(dose3));
  }

  function drawGraph() {
    var graph = new Graph();

    var noeud = new Array();
    var prereq = new Array();
    var fond = new Array();
    var depart = graph.newNode({label: "Départ", color: "#0000FF", text: "#FFFFFF", bold: true});
    <% existe = Set.new %>
    <% maximum = 1 %>
    <% chapters = Array.new %>
    <% Chapter.includes(:section, :prerequisites).all.each do |chapter| %>
      <% unless section_is_fondation[chapter.section_id] %>
        <% chapters.push(chapter) %>
        prereq[<%= chapter.id %>] = <%= x = chapter.number_prerequisites() %>;
        <% if x+1 > maximum %>
          <% maximum = x+1 %>
        <% end %>
        <% existe.add(chapter.id) %>
        fond[<%= chapter.id %>] = <%= section_is_fondation[chapter.section_id] %>
      <% end %>
    <% end %>

    var couleur = 0;
    var couleurmaxi = 0;   
    var taille = 0 

    <% Chapter.includes(:section).all.each do |chapter| %>
      <% unless section_is_fondation[chapter.section_id] %>
        couleur = 1+prereq[<%= chapter.id %>];
        couleurmaxi = <%= maximum %>;
        <% nom = chapter.name %>
        <% if nom.size > 25 %>
          <% nom = nom.slice(0..22) + "..." %>
        <% end %>
        <% if section_is_fondation[chapter.section_id] %>
          noeud[<%= chapter.id %>] = graph.newNode({label: "<%= nom.html_safe  %>", color: "#".concat(coucou(couleur, couleurmaxi, <%= chapter.section_id - 1 %>)) <%= ", bold: true" if chapter.online %>});
        <% else %>
          noeud[<%= chapter.id %>] = graph.newNode({label: "<%= nom.html_safe  %>", color: "#".concat(coucou(couleur, couleurmaxi, <%= chapter.section_id - 1 %>)) <%= ", bold: true" if chapter.online %>});
        <% end %>
        if(prereq[<%= chapter.id %>] == 0){
          graph.newEdge(depart, noeud[<%= chapter.id %>], {color: "#CCCCCC"});
        }
      <% end %>
    <% end %>

    <% Prerequisite.all.each do |p| %>
      <% if existe.include?(p.prerequisite_id) && existe.include?(p.chapter_id) %>
        if (fond[<%= p.chapter_id %>] && !fond[<%= p.prerequisite_id %>]){
          couleur = "FF0000";
          taille = 5;
        }
        else if(fond[<%= p.chapter_id %>] || fond[<%= p.prerequisite_id %>]){
          couleur = "00BB00";
          taille = 1;
        }
        else{
          couleur = "000000";
          taille = 1;
        }
        graph.newEdge(noeud[<%= p.prerequisite_id %>], noeud[<%= p.chapter_id %>], {color: couleur, width: taille});
      <% end %>
    <% end %>


    var springy = window.springy = jQuery('#structure').springy({
      graph: graph,
      nodeSelected: function(node) {
        console.log('Node selected: ' + JSON.stringify(node.data));
      }
    });
  }
  
  var drawGraphDone = false;
  function drawGraphIfPossible() {
    if ("$" in window) {
      if (!drawGraphDone) {
        drawGraphDone = true;
        drawGraph();
      }
    }
  }
  callMethodWhenPossible(drawGraphIfPossible);
</script>


<center>
  <canvas id="structure" style="border:1px solid #c3c3c3;" width="1000" height="700">
  Votre navigateur ne supporte pas de canvas.
  </canvas>
</center>

<% liste = Array.new %>

<!-- Création de la liste -->
<% [true, false].each do |f| %>
  <% Section.where(:fondation => f).each do |s| %>
    <% liste2 = Array.new %>
    <% liste2.push(s.name) %>
    <% liste3 = Array.new %>
    <% s.chapters.order(:name).each do |c| %>
      <% liste3.push([c.name, c.id]) %>
    <% end %>
    <% liste2.push(liste3) %>

    <% liste.push(liste2) %>
  <% end %>
<% end %>

<div class="grid mt-3" style="--bs-columns:12;">

  <!-- Ajouter un lien -->
  <div class="g-col-12 g-col-md-6">
    <center>
      <%= form_for(:prerequisite, url: add_prerequisite_path) do |f| %>
        <h3> Ajouter un lien </h3>
        <div class="mb-2">
        <%= f.label "Prérequis", :for => "add_form_prerequisite", :class => "form-label" %>
        <%= f.select(:prerequisite_id, grouped_options_for_select(liste), {}, { :class => "form-select", :style => "max-width:300px;", :prompt => true, :id => "add_form_prerequisite" }) %>
        </div>
        <div class="mb-2">
        <%= f.label "Chapitre", :for => "add_form_chapter", :class => "form-label" %>
        <%= f.select(:chapter_id, grouped_options_for_select(liste), {}, { :class => "form-select", :style => "max-width:300px;", :prompt => true, :id => "add_form_chapter" }) %>
        </div>
        <%= f.submit "Ajouter ce lien", class: "btn btn-primary" %>
      <% end %>
    </center>
  </div>
  
  <!-- Supprimer un lien -->
  <div class="g-col-12 g-col-md-6">
    <center>
      <%= form_for(:prerequisite, url: remove_prerequisite_path) do |f| %>
        <h3> Supprimer un lien </h3>
        <div class="mb-2">
        <%= f.label "Prérequis", :for => "delete_form_prerequisite", :class => "form-label" %>
        <%= f.select(:prerequisite_id, grouped_options_for_select(liste), {}, { :class => "form-select", :style => "max-width:300px;", :prompt => true, :id => "delete_form_prerequisite" }) %>
        </div>
        <div class="mb-2">
        <%= f.label "Chapitre", :for => "delete_form_chapter", :class => "form-label" %>
        <%= f.select(:chapter_id, grouped_options_for_select(liste), {}, { :class => "form-select", :style => "max-width:300px;", :prompt => true, :id => "delete_form_chapter" }) %>
        </div>
        <%= f.submit "Supprimer ce lien", class: "btn btn-primary" %>
      <% end %>
    </center>
  </div>
</div>
