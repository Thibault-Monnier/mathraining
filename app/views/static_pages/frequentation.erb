<% provide(:title, 'Statistiques diverses') %>

<h1><%= title_1("Statistiques diverses") %></h1>

<h3>Fréquentation du site</h3>

Le graphique suivant reprend le nombre d'utilisateurs connectés chaque jour sur le site, depuis le 19 mars 2015.<br/><br/>

<center>
<!-- Endroit pour dessiner la fréquentation -->
<div id="contenant1" style="width:100%; max-width:900px; height:480px; position:relative; display:block;">
<canvas id="myCanvas1" width="900" height="480" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>
</center>

<h3>Résolutions d'exercices</h3>

Ci-dessous, le nombre d'exercices résolus par semaine depuis le lancement du site, le 8 décembre 2014.<br/><br/>

<center>
<!-- Endroit pour dessiner la fréquentation -->
<div id="contenant2" style="width:100%; max-width:900px; height:480px; position:relative; display:block;">
<canvas id="myCanvas2" width="900" height="480" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>
</center>

<h3>Soumissions aux problèmes</h3>

Ci-dessous, le nombre de soumissions par semaine depuis le lancement du site, le 8 décembre 2014.<br/><br/>

<center>
<!-- Endroit pour dessiner la fréquentation -->
<div id="contenant3" style="width:100%; max-width:900px; height:480px; position:relative; display:block;">
<canvas id="myCanvas3" width="900" height="480" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>
</center>

<h3>Temps de correction</h3>

Chaque soumission à un problème doit être corrigée par un correcteur. Le graphique ci-dessous donne, pour chaque semaine depuis le 8 décembre 2014, le temps moyen de correction d'une soumission (en jours).<br/><br/>

<center>
<!-- Endroit pour dessiner la fréquentation -->
<div id="contenant4" style="width:100%; max-width:900px; height:480px; position:relative; display:block;">
<canvas id="myCanvas4" width="900" height="480" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>
</center>


<% def convert_date(courant) %>
  <% d = "" %>
  <% d = d+"0" if courant.day < 10 %>
  <% d = d+courant.day.to_s + "/" %>
  <% d = d + "0" if courant.month < 10 %>
  <% d = d + courant.month.to_s + "/" %>
  <% d = d + "0" if (courant.year % 2000) < 10 %>
  <% d = d + (courant.year % 2000).to_s %>
  <% return d; %>
<% end %>

<% def ruby_to_javascript(arr) %>
  <% t = "[" %>
  <% prems = true %>
  <% arr.each do |a| %>
    <% t = t + "," if !prems %>
    <% prems = false %>
    <% t = t + a.to_s %>
  <% end %>
  <% t = t + "]" %>
  <% return t.html_safe %>
<% end %>

<% def ruby_to_javascript_string(arr) %>
  <% t = "[" %>
  <% prems = true %>
  <% arr.each do |a| %>
    <% t = t + "," if !prems %>
    <% prems = false %>
    <% t = t + "'" + a + "'" %>
  <% end %>
  <% t = t + "]" %>
  <% return t.html_safe %>
<% end %>


<script type="text/javascript">

  var graphique = [,,,];
  
  function drawGraph(n, batonnets) {
  var abs = graphique[n][0];
  var val = graphique[n][1];
  var namec = graphique[n][2];
  var namecont = graphique[n][3];
  var couleur = graphique[n][4];
  var c = $(namec);
  var ctx = c.get(0).getContext('2d');
  var container = $(c).parent();
  c.attr('width', $(container).width() ); //max width
  c.attr('height', 480*$(container).width()/900.0); //max height
  document.getElementById(namecont).style.height = 480*$(container).width()/900.0 + "px"
    
  //Redraw & reposition content
  var x = c.width();
  var y = c.height();

  var pct = c.width()/900.0;

  ctx.beginPath();
  ctx.rect(pct*50, pct*5, pct*806, pct*450);
  ctx.fillStyle = 'white';
  ctx.fill();
  ctx.lineWidth = 1.5;
  ctx.strokeStyle = 'black';
  ctx.stroke();
    
  // Affichage des barres horizontales
    
  var maxivisitor = 0;
  for(i = 0; i < val.length; i++) {
    if(maxivisitor < val[i]) {
      maxivisitor = val[i];
    }
  }
  var maxi = 1.1*maxivisitor;
  
  var tranche = Math.floor(maxivisitor/4);
  if(tranche == 0){
    tranche = 1;
  }
    
  ctx.lineWidth = 0.5;
  ctx.strokeStyle = 'grey';
  ctx.font="14px Arial";
  ctx.fillStyle = 'black';
  ctx.textAlign = 'right';

  ctx.setLineDash([10, 10]);
  ctx.beginPath();

  if (pct < 0.7){
    ctx.font="9px Arial";
  }
  
  var encours = Math.floor(maxivisitor);
  
  while(encours > 0) {
    var haut = 450 - 450*(encours/maxi);
    if(haut < 0) {
      haut = 0;
    }
    ctx.moveTo(pct*50, pct*(haut+5));
    ctx.lineTo(pct*856, pct*(haut+5));
    ctx.fillText(encours,pct*44,pct*(haut+10));
    encours = encours - tranche;
  }

  ctx.stroke();
  
  ctx.font="12px Arial";
  ctx.textAlign = 'center';
  ctx.beginPath();
  
  encours = val.length-1;
  var printw = 10000;
  
  while(encours >= 0) {
    var w = 3 + 800*encours/(val.length-1);
    if((w < printw - 50 && pct > 0.8) || (w < printw - 70 && pct > 0.7)) {
      ctx.fillText(abs[encours],pct*(50+w),pct*455+15);
      printw = w;
      ctx.moveTo(pct*(50+w), pct*5);
      ctx.lineTo(pct*(50+w), pct*455);
    }
    encours = encours-1;
  }
  
  ctx.stroke();
  ctx.setLineDash([]);
    
  // On trace maintenant le graphique
  ctx.strokeStyle = 'black';

  // Commencement du graphique

  // On parcourt de droite à gauche
  encours = val.length-1;
  premier = true

  ctx.fillStyle = couleur;
  ctx.strokeStyle = couleur;
  ctx.font = "12px Arial";
  ctx.textAlign = 'center';
  ctx.lineWidth = 2;

  while(encours >= 0) {
    var w = 3 + 800*encours/(val.length-1);
    var huser = 450 - 450*(val[encours]/maxi);
    if(val[encours] >= 0) {
      if(batonnets) {
        var halfwidth = 400/(val.length-1);
        var gg = Math.round(pct*(50+w-halfwidth));
        var dd = Math.round(pct*(50+w+halfwidth));
        ctx.fillRect(gg,pct*(huser+5),dd-gg,pct*450*(val[encours]/maxi));
      }
      else {
        if(premier) {
          ctx.beginPath();
          ctx.moveTo(pct*(50+w), pct*(huser+5));
          premier = false;
        }
        else {
          ctx.lineTo(pct*(50+w), pct*(huser+5));
        }
      }
    }
    encours = encours-1;
  } 
  if(!batonnets) { 
    ctx.stroke();
  }
  else {
    ctx.beginPath();
    ctx.rect(pct*50, pct*5, pct*806, pct*450);
    ctx.lineWidth = 1.5;
    ctx.strokeStyle = 'black';
    ctx.stroke();
  }
  
  }
  
  function showXY(n, x, y) {
    var abs = graphique[n][0];
    var val = graphique[n][1];
    var namec = graphique[n][2];
    var namecont = graphique[n][3];
    var couleur = graphique[n][4];
    
    var c = $(namec);
    var canvas = c.get(0)
    var ctx = canvas.getContext('2d');
    
    var pct = c.width()/900.0;
    
    var maxivisitor = 0;
    for(i = 0; i < val.length; i++) {
      if(maxivisitor < val[i]) {
        maxivisitor = val[i];
      }
    }
    var maxi = 1.1*maxivisitor;
    
    var realx = Math.round((x-53)*(val.length-1)/800.0);
    if(realx < 0) {
      realx = 0;
    }
    else if(realx > val.length-1) {
      realx = val.length-1;
    }
    
    var pointx = (53+800*realx/(val.length-1))*pct;
    var pointy = (455 - 450*(val[realx]/maxi))*pct;
    
    var h = 30;
    var w = 150;
    
    var cornerx = pointx;
    var cornery = pointy-h;
    
    if(cornerx + w > 856*pct) {
      cornerx = cornerx-w;
    }
    if(cornery < 0) {
      cornery = cornery+h;
    }
    
    if(val[realx] >= 0) {
      ctx.beginPath();
      ctx.rect(cornerx, cornery, w, h);
      ctx.fillStyle = 'lightgrey';
      ctx.fill();
      ctx.lineWidth = 1.5;
      ctx.font = "18px Arial";
      ctx.strokeStyle = 'black'
      ctx.fillStyle = 'black';
      
      ctx.moveTo(cornerx+w*0.6, cornery);
      ctx.lineTo(cornerx+w*0.6, cornery+h);
      ctx.fillText(abs[realx],cornerx+w*0.3,cornery+h*0.7);
      ctx.fillText(Math.round(val[realx]*100)/100.0,cornerx+w*0.8,cornery+h*0.7);
      ctx.stroke();
      
      ctx.beginPath();
      ctx.rect(pointx-2,pointy-2,4,4);
      ctx.strokeStyle = "black";
      ctx.fillStyle = "black";
      ctx.fill();
      ctx.stroke();
    }
  }
  
  function listen(n, batonnets) {
    var c = $(graphique[n][2]);
    var canvas = c.get(0);
    
    canvas.addEventListener("mousemove", function(evt){
      var pct = c.width()/900.0;
      var rect = canvas.getBoundingClientRect();
      var mouseX = evt.clientX - rect.left;
      var mouseY = evt.clientY - rect.top;
      if(mouseX >= 50*pct && mouseX <= 856*pct && mouseY >= 5*pct && mouseY <= 455*pct) {
        drawGraph(n, batonnets);
        showXY(n, mouseX/pct, mouseY/pct)
      }
      else {
        drawGraph(n, batonnets);
      }
    });
    canvas.addEventListener("mouseleave", function(){
      drawGraph(n, batonnets);
    });
  }
  
  function listen_all() {
    listen(0, false);
    listen(1, true);
    listen(2, true);
    listen(3, false);
  }
  
  <!-- Calcul des graphiques -->
  var xxx = [];
  var yyy = [];
  <% xx = Array.new %>
  <% yy = Array.new %>
  <% @visiteurs = Visitor.order("date").to_a %>
  <% premierjour = @visiteurs[0].date %>
  <% dernierjour = DateTime.now.in_time_zone.to_date - 1 %>
  <% prev = premierjour %>
  <% if premierjour < dernierjour %>
    <% @visiteurs = @visiteurs.take @visiteurs.size()-1 %>
    <% @visiteurs.each do |v| %>
      <% ((prev+1)..(v.date-1)).each do |missing| %>
        <% yy.push(0) %>
        <% xx.push(convert_date(missing)) %>
      <% end %>
      <% yy.push(v.number_user + v.number_admin) %>
      <% xx.push(convert_date(v.date)) %>
      <% prev = v.date %>
    <% end %>
    <% ((prev+1)..dernierjour).each do |missing| %>
      <% yy.push(0) %>
        <% xx.push(convert_date(missing)) %>
    <% end %>
    xxx = <%= ruby_to_javascript_string(xx) %>;
    yyy = <%= ruby_to_javascript(yy) %>;
    
    graphique[0] = [xxx, yyy, '#myCanvas1', 'contenant1', 'orange'];
      
    <% xx = Array.new %>
    <% yy = Array.new %>
    <% yy2 = Array.new %>
    <% yy3 = Array.new %>
    <% Record.order(:date).each do |r| %>
      <% xx.push(convert_date(r.date)) %>
      <% yy.push(r.number_solved) %>
      <% yy2.push(r.number_submission) %>
      <% if r.correction_time.nil? %>
        <% yy3.push(-1) %>
      <% else %>
        <% yy3.push(r.correction_time) %>
      <% end %>
    <% end %>
    xxx = <%= ruby_to_javascript_string(xx) %>;
    yyy = <%= ruby_to_javascript(yy) %>;
    
    graphique[1] = [xxx, yyy, '#myCanvas2', 'contenant2', 'blue'];
      
    yyy = <%= ruby_to_javascript(yy2) %>;
    graphique[2] = [xxx, yyy, '#myCanvas3', 'contenant3', 'red'];
      
    yyy = <%= ruby_to_javascript(yy3) %>;
    graphique[3] = [xxx, yyy, '#myCanvas4', 'contenant4', 'green'];
  <% end %>
  
  function respondCanvas(){
    <% if premierjour < dernierjour %>     
      drawGraph(0, false);
      drawGraph(1, true);
      drawGraph(2, true);
      drawGraph(3, false);
    <% end %>
  }
  
  //Run function when browser  resize
  $(window).resize( respondCanvas );

  $(document).ready( function(){
    //Initial call
    listen_all();
    respondCanvas();
  });

</script>
