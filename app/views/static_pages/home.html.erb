<% def readable_number(n) %>
  <% if n == 0 %>
    <% return "0" %>
  <% end %>
  <% m = n %>
  <% num_digits = 0 %>
  <% ans = "" %>
  <% while(m > 0) %>
    <% if num_digits % 3 == 0 and num_digits > 0 %>
      <% ans = "&thinsp;" + ans %>
    <% end %>
    <% d = m % 10 %>
    <% ans = d.to_s + ans %>
    <% m = m/10 %>
    <% num_digits = num_digits + 1 %>
  <% end %>
  <% return ans %>
<% end %>


<% if signed_in? && current_user.sk.root? %>

  <% corrector_to_points = {} %>
  
  <div class="grid" style="--bs-columns:12; --bs-gap:5px;">
    <div class="g-col-12 g-col-lg-7">
      <center>
      <!-- Endroit pour dessiner la cible -->
      <div id="contenant" class="mt-3 mb-2" style="width:100%; max-width:600px; height:600px; position:relative; display:block;">
      <canvas id="myCanvas" width="600" height="600" style="position:absolute; left:0px; top:0px;">
      Votre navigateur ne supporte pas les canvas.
      </canvas>
      </div>
      </center>
    </div>
  
  <script type="text/javascript">
    function respondCanvas() {
      // Check light or dark theme
      var is_dark = (document.documentElement.getAttribute('data-bs-theme') == 'dark');
    
      // Get the canvas & context
      var c = document.getElementById('myCanvas');
      var ctx = c.getContext('2d');
      var container = c.parentElement;
    
      var W = 600.0;
      var H = 600.0;
    
      c.setAttribute('width', container.offsetWidth); //max width
      c.setAttribute('height', H * container.offsetWidth / W); //max height

      container.style.height = H * container.offsetWidth / W + "px";

      // Draw content

      var pct = c.offsetWidth / W;
      var W_real = pct * W;
      var H_real = pct * H;
      var W_center = W_real * 0.5;
      var H_center = H_real * 0.5;
      var R = pct * 250;
    
      // Background
      ctx.beginPath();
      ctx.rect(0, 0, W_real, H_real);
      ctx.fillStyle = (is_dark ? 'rgb(33, 37, 41)' : 'white');
      ctx.fill(); 
      
      // Circles
      ctx.lineWidth = 1;
      ctx.strokeStyle = (is_dark ? 'white' : 'black');
      ctx.fillStyle = (is_dark ? 'white' : 'black');
      ctx.font = "14px Arial";
      ctx.textAlign = "center";
      
      for (var i = 1; i <= 5; i++) {
        ctx.beginPath();
        ctx.arc(W_center, H_center, R * i * 0.2, 0, 2 * Math.PI);    
        ctx.stroke();
        ctx.fillText((6-i).toString(), W_center + R * (i * 0.2 - 0.05), H_center - 6);
      }
      
      // Radii
      ctx.beginPath();
      ctx.moveTo(W_center - R, H_center);
      ctx.lineTo(W_center + R, H_center);
      ctx.moveTo(W_center - R * 0.5, H_center + R * Math.sqrt(3) * 0.5);
      ctx.lineTo(W_center + R * 0.5, H_center - R * Math.sqrt(3) * 0.5);
      ctx.moveTo(W_center - R * 0.5, H_center - R * Math.sqrt(3) * 0.5);
      ctx.lineTo(W_center + R * 0.5, H_center + R * Math.sqrt(3) * 0.5);
      ctx.stroke();
      
      // Initials of sections
      ctx.font = "16px Arial";
      <% Section.where(:fondation => false).order(:id).each do |s| %>
        ctx.fillText("<%= s.initials %>", W_center + R * Math.cos(<%= s.id %> * Math.PI/3 - Math.PI/6) * 0.9, H_center - R * Math.sin(<%= s.id %> * Math.PI/3 - Math.PI/6) * 0.9 + 6);
      <% end %>
      
      // Point for each correction
      <% Following.joins(submission: :problem).joins(:user).select("problems.level AS level, problems.section_id AS section_id, followings.created_at, followings.user_id AS user_id").where(:kind => :first_corrector).where("followings.created_at > ?", Date.today.in_time_zone).each do |f| %>
        <% r = f.created_at.to_i %>
        <% radius_pct = (0.2 * (5 - f.level + 0.01 * (((r * 37) % 99) + 1))).round(4) %>
        <% angle = (60 * (f.section_id - 1) + 60 * 0.01 * (((r * 73) % 99) + 1)).round(4) %>
        ctx.beginPath();
        ctx.arc(W_center + R * <%= radius_pct %> * Math.cos(Math.PI / 180 * <%= angle %>), H_center - R * <%= radius_pct %> * Math.sin(Math.PI / 180 * <%= angle %>), 5 * pct, 0, 2 * Math.PI);
        ctx.fillStyle = "red";
        ctx.fill();
        <% if corrector_to_points.key?(f.user_id) %>
          <% corrector_to_points[f.user_id] += f.level %>
        <% else %>
          <% corrector_to_points[f.user_id] = f.level %>
        <% end %>
      <% end %>
    }

    window.addEventListener("resize", () => {
      respondCanvas();
    });
  
    window.addEventListener("theme-change", () => {
      respondCanvas();
    });
  
    respondCanvas();
  </script>
  
    <div class="g-col-12 g-col-lg-5">
      <table class="table table-bordered" style="width:auto;">
      <% corrector_to_points.sort_by{|_key, value| -value}.each do |user_id, num_points| %>
        <tr><td><%= raw(User.find(user_id).linked_name) %></td><td><%= num_points %></td></tr>
      <% end %>
      </table>
    </div>
  </div>

<% end %>


<!-- Gros titre Mathraining -->

<% user_with_recent_corrections = User.left_joins(:followings).where(followings: {:kind => :first_corrector}).where("followings.created_at > ?", Date.today.in_time_zone).group(:id).select("users.*, count(followings.id) AS num_corrections").order("num_corrections DESC").to_a %>

<% if signed_in? && (current_user.sk.admin? || current_user.sk.corrector?) %>
  <% num_my_corrections = 0 %>
  <% user_with_recent_corrections.each do |u| %>
    <% num_my_corrections = u.num_corrections if u.id == current_user.sk.id %>
  <% end %>
  <% pct = [20*num_my_corrections, 100].min %>
  <div class="progress" style="margin-top:3px;">
    <% if num_my_corrections > 0 %>
      <div class="progress-bar bg-success" role="progressbar" style="width: <%= pct %>%" aria-valuenow="<%= pct %>" aria-valuemin="0" aria-valuemax="100">
        <% if num_my_corrections < 5 %>
          <%= num_my_corrections %> / 5
        <% else %>
          Merci pour ces <%= num_my_corrections %> corrections !
        <% end %>
      </div>
    <% else %>
      <div class="text-center" style="width:100%">
        Pour votre santé, corrigez 5 soumissions par jour !
      </div>
    <% end %>
  </div>
<% end %>


<div class="home">
  <div class="grid" style="--bs-columns:12; --bs-gap:5px;">
    <div class="g-col-12 g-col-md-6 g-col-lg-7">
    <center>
    <%= image_tag "mathraining.png", :class => "light-theme-only", :style => "width:100%; max-width:334px;" %>
    <%= image_tag "mathraining-dark.png", :class => "dark-theme-only", :style => "width:100%; max-width:334px;" %>
    </center>
    </div>
    <div class="g-col-12 g-col-md-6 g-col-lg-5 pt-2">
    <% tot = User.where("admin = ?", false).sum(:rating) %>
    <% number = User.where("admin = ? AND rating > 0 AND active = ?", false, true).count %>
    <center>
    <table class="home-stats">
    <tr><td class="left top text-color-mt-blue"><%= raw(readable_number(number)) %></td><td class="right top">utilisateurs classés</td></tr>
    <tr><td class="left text-color-mt-blue"><%= raw(readable_number(Solvedproblem.count)) %></td><td class="right">problèmes résolus</td></tr>
    <tr><td class="left text-color-mt-blue"><%= raw(readable_number(Solvedquestion.count)) %></td><td class="right">exercices résolus</td></tr>
    <tr><td class="left bottom text-color-mt-blue"><%= raw(readable_number(tot)) %></td><td class="right bottom">points distribués</td></tr>
    </table>
    </center>
    </div>
  
    <div class="g-col-12">
      <h3 class="mt-3">
      Le site interactif d'entraînement aux Olympiades Internationales de Mathématiques
      </h3>
    </div>
  </div>
</div>

<% num_users_to_display = user_with_recent_corrections.size %>
<% if num_users_to_display > 0 %>
  <div class="bg-as-table-ld-primary p-2 text-center mb-2">
    Merci au<%= 'x' if num_users_to_display > 1 %> correcteur<%= 's' if num_users_to_display > 1 %> du jour :
    <% first = true %>
    <% user_with_recent_corrections.each do |u| %>
      <%= " - " unless first %>
      <% first = false %>
      <%= raw(u.linked_name) %>
      <% if @signed_in %>
        (<%= u.num_corrections %>)
      <% end %>
    <% end %>
  </div>
<% end %>

<!-- Afficher les actualités -->
<%= render 'actualities/index' %>

