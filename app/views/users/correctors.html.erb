<% provide(:title, 'Corrections') %>

<% sections = Section.select(:id, :short_abbreviation, :abbreviation).where(:fondation => false).order(:id).to_a %>

<h1><%= title_1("Corrections") %></h1>

<% newsubs = Submission.joins(:problem).where(:status => :waiting, :visible => true).group("problems.section_id").group("problems.level").count %>
<% num_nuwsubs = newsubs.values.sum %>
<p>Il y a actuellement <b><%= num_nuwsubs %></b> solution<%= "s" if num_nuwsubs >= 2 %> en attente de correction. Le tableau suivant en illustre la répartition, par niveau et par section.</p>

<div class="my-3" style="width:100%; overflow-x:auto;">
<center>
<table class="table table-bordered m-0" style="min-width:490px; width:490px;">
<tr class="table-light">
<th style="width:70px;"></th>
<% sections.each do |sec| %>
  <th class="text-center" style="width:70px;"><%= sec.short_abbreviation %></th>
<% end %>
</tr>

<% (1..5).each do |lev| %>
  <tr>
  <th class="table-light text-center">Niv. <%= lev %></th>
  <% sections.each do |sec| %>
    <% num = newsubs[[sec.id, lev]] %>
    <% num = 0 if num.nil? %>
    <% red_part = [160, 8*num].min %>
    <% green_part = 160 - red_part %>
    <td class="text-center" style="background-color:rgb(<%= 95 + red_part %>, <%= 95 + green_part %>, 0);">
      <%= num %>
    </td>
  <% end %>
  </tr>
<% end %>
</table>
</center>
</div>

<p>Le graphique suivant montre, en <span class="text-color-green">vert</span>, les soumissions correctes, en <span class="text-color-red">rouge</span> les soumissions incorrectes, et en <span class="text-color-grey">gris</span> les soumissions en attente de correction.</p>

<!-- On parcourt tous les correcteurs -->

<% numbercorrect = Array.new %>
<% numberincorrect = Array.new %>
<% numberdontknow = Array.new %>

<% for i in (0..30) do %>
  <% numbercorrect[i] = 0 %>
  <% numberincorrect[i] = 0 %>
  <% numberdontknow[i] = 0 %>
<% end %>

<% today = DateTime.now.in_time_zone.to_date %>
<% twoweeksago = today - 14 %>
<% amonthago = today - 32 %>

<% Groupdate.time_zone = false unless Rails.env.production? %>
<% allsub = Submission.where("created_at > ? AND visible = ?", amonthago, true).group(:status).group_by_day(:created_at).count %>

<% allsub.each do |x, n| %>
  <% status = x.first %>
  <% date = Rails.env.production? ? x.second.in_time_zone.to_date : x.second.to_date %>
  <% diff = (today - date).to_i %>
  <% if diff < 31 %>
    <% if status == "waiting" %>
      <% numberdontknow[diff] = numberdontknow[diff] + n %>
    <% elsif status == "correct" %>
      <% numbercorrect[diff] = numbercorrect[diff] + n %>
    <% else %>
      <% numberincorrect[diff] = numberincorrect[diff] + n %>
    <% end %>
  <% end %>
<% end %>

<% maxi = 0 %>
<% for i in (0..30) do %>
  <% if numbercorrect[i] + numberincorrect[i] + numberdontknow[i] > maxi %>
    <% maxi = numbercorrect[i] + numberincorrect[i] + numberdontknow[i] %>
  <% end %>
<% end %>

<% maxi = maxi + 1 %>

<center>

<!-- Endroit pour dessiner le graphique des corrections -->
<div id="contenant" class="mb-3" style="width:100%; max-width:700px; height:380px; position:relative; display:block;">
<canvas id="myCanvas" width="700" height="380" style="position:absolute; left:0px; top: 0px;">
Votre navigateur ne supporte pas les canvas.
</canvas>
</div>

</center>


<script type="text/javascript">

  function respondCanvas(){
  
    //Get the canvas & context
    var c = $('#myCanvas');
    var ctx = c.get(0).getContext('2d');
    var container = $(c).parent();
    
    c.attr('width', $(container).width() ); //max width
    c.attr('height', 380*$(container).width()/700.0); //max height

    document.getElementById('contenant').style.height = 380*$(container).width()/700.0 + "px"

    //Redraw & reposition content
    var x = c.width();
    var y = c.height();

    var pct = c.width()/700.0;
    
    ctx.beginPath();
    ctx.rect(pct*43, pct*5, pct*620, pct*350);
    ctx.fillStyle = 'white';
    ctx.fill();
    ctx.lineWidth = 1;
    ctx.strokeStyle = 'black';
    ctx.stroke();
    
    // Entre 43 et 663 --> largeur totale 806, à diviser en 31 : 20 pixels par rectangle
    
    <% for i in (0..30) do %>
      ctx.beginPath();
      <% size = (330*numbercorrect[30-i])/maxi %>
      ctx.rect(pct*<%= 43+20*i %>, pct*355, pct*20, -pct*<%= size %>);
      ctx.fillStyle = 'green';
      ctx.fill();
      ctx.lineWidth = 1;
      ctx.strokeStyle = 'black';
      ctx.stroke();
      
      <% avant = size %>
      
      ctx.beginPath();
      <% size = (330*numberincorrect[30-i])/maxi %>
      ctx.rect(pct*<%= 43+20*i %>, pct*<%= 355 - avant %>, pct*20, -pct*<%= size %>);
      ctx.fillStyle = 'red';
      ctx.fill();
      ctx.lineWidth = 1;
      ctx.strokeStyle = 'black';
      ctx.stroke();
      
      <% avant = avant + size %>
      
      ctx.beginPath();
      <% size = (330*numberdontknow[30-i])/maxi %>
      ctx.rect(pct*<%= 43+20*i %>, pct*<%= 355 - avant %>, pct*20, -pct*<%= size %>);
      ctx.fillStyle = 'grey';
      ctx.fill();
      ctx.lineWidth = 1;
      ctx.strokeStyle = 'black';
      ctx.stroke();
    <% end %>
    
    ctx.font="12px Arial";
    ctx.fillStyle = 'black';
    ctx.textAlign = 'center';
    
    if (pct > 0.7){
      ctx.fillText("aujourd'hui",pct*(663-13),pct*371);
      ctx.fillText("il y a 10 jours",pct*(663-13-10*20),pct*371);
      ctx.fillText("il y a 20 jours",pct*(663-13-20*20),pct*371);
      ctx.fillText("il y a 30 jours",pct*(663-13-30*20),pct*371);
    }
  
    ctx.textAlign = 'right';
    <% i = maxi - 1 %>
    <% while(i > 0) %>
      ctx.fillText("<%= i %>", pct*36,pct*(<%= 355-330*i/maxi %>+4));
      <% i = i - 10 %>
    <% end %>
  }

  window.addEventListener("load", () => {
    respondCanvas();
  });

  window.addEventListener("resize", () => {
    respondCanvas();
  });
</script>


<h3>Dernières corrections</h3>

<p>Pour chaque section et chaque niveau, le tableau ci-dessous donne le dernier correcteur ayant corrigé une soumission à un problème de ce type.</p>

<div style="width:100%; overflow-x:auto;">
<center>
<table class="table table-bordered mb-3" style="min-width:850px; width:850px;">
<tr class="table-light">
<th style="width:70px;"></th>
<% sections.each do |sec| %>
  <th class="text-center" style="width:130px;"><%= sec.abbreviation %></th>
<% end %>
</tr>

<% last_following_user_by_level_and_section = Array.new %>
<% (1..5).each do |lev| %>
  <% last_following_user_by_level_and_section[lev] = Array.new %>
<% end %>

<!-- Load last 100 followings to have less than 30 sql requests -->
<!-- It is possible to do everything with only one request but it actually looks slower: -->
<!-- User.find_by_sql("SELECT users.*, problems.level AS problem_level, problems.section_id FROM followings f1 INNER JOIN submissions ON f1.submission_id = submissions.id INNER JOIN problems ON submissions.problem_id = problems.id INNER JOIN users ON users.id = f1.user_id JOIN (SELECT problems.level AS problem_level, problems.section_id, MAX(f2.created_at) AS max_created_at FROM followings f2 INNER JOIN submissions ON f2.submission_id = submissions.id INNER JOIN problems ON submissions.problem_id = problems.id GROUP BY problems.level, problems.section_id) f ON f.problem_level = problems.level AND f.section_id = problems.section_id AND f.max_created_at = f1.created_at").each do |u| -->
  <!-- last_following_user_by_level_and_section[u.problem_level][u.section_id] = u -->
<!-- end -->
<% num_preload = 100 %>
<% recent_followings = Following.joins(submission: :problem).select("followings.user_id, problems.level, problems.section_id").where(:kind => 1).includes(:user).order("followings.created_at DESC").limit(num_preload) %>
<% recent_followings.each do |f| %>
  <% if last_following_user_by_level_and_section[f.level][f.section_id].nil? %>
    <% last_following_user_by_level_and_section[f.level][f.section_id] = f.user %>
  <% end %>
<% end %>
<% need_reload = (recent_followings.size == num_preload) %>

<% (1..5).each do |lev| %>
  <tr>
  <th class="table-light text-center">Niv. <%= lev %></th>
  <% sections.each do |sec| %>
    <td class="text-center">
      <% u = nil %>
      <% if !last_following_user_by_level_and_section[lev][sec.id].nil? %>
        <% u = last_following_user_by_level_and_section[lev][sec.id] %>
      <% elsif need_reload %>
        <% f = Following.joins(submission: :problem).where(problems: {level: lev, section_id: sec.id}, kind: 1).order("created_at").last %>
        <% if !f.nil? %>
          <% u = f.user %>
        <% end %>
      <% end %>
      <% if u.nil? %>
        -
      <% else %>
        <%= raw(u.linked_name(2, false)) %>
      <% end %>
    </td>
  <% end %>
  </tr>
<% end %>

</table>
</center>
</div>


<h3>Correcteurs</h3>

<p>Le tableau suivant reprend la liste de tous les correcteurs de Mathraining. Un grand merci à eux tous !</p>

<% nb_recent_by_user = Following.where("created_at >= '#{twoweeksago}' AND kind > 0").group(:user_id).count %>

<% correctors = [] %>
<% Following.select("followings.user_id, COUNT(followings.id) AS nb_corrections, MIN(followings.created_at) AS first_correction, MAX(followings.created_at) AS last_correction").where("kind > 0").group(:user_id).includes(:user).each do |f| %>
  <% correctors.push({:nb_corrections => f.nb_corrections, :nb_recent => (nb_recent_by_user[f.user_id].nil? ? 0 : nb_recent_by_user[f.user_id]), :first_correction => f.first_correction, :last_correction => f.last_correction, :user => f.user}) %>
<% end %>

<center>
<table class="table table-bordered" style="width:auto;">
<tr class="table-light"><th>Nom</th><th class="text-center">Corrections</th><th class="text-center">&le; 2 sem.</th><th class="d-none d-md-table-cell">Première</th><th class="d-none d-md-table-cell">Dernière</th></tr>

<% correctors.sort_by{|e| -e[:nb_corrections]}.each do |c| %>
  <% u = c[:user] %>
  <% if c[:nb_recent] > 140 %>
    <tr style="background-color:rgb(40,250,40)">
  <% else %>
    <tr style="background-color:rgb(<%= (250-c[:nb_recent]*1.5).round %>,250,<%= (250-c[:nb_recent]*1.5).round %>)">
  <% end %>
  <td><%= raw(u.linked_name) %></td>
  <td class="text-center"><%= c[:nb_corrections] %></td>
  <td class="text-center"><%= c[:nb_recent] %></td>
  <td class="d-none d-md-table-cell"><%= write_date_only(c[:first_correction].in_time_zone) %></td>
  <td class="d-none d-md-table-cell"><%= write_date_only(c[:last_correction].in_time_zone) %></td>
  </tr>
<% end %>
</table>
</center>
