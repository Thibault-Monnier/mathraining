<% abreviation = ["Combinatoire", "Géométrie", "Théorie des nombres", "Algèbre", "Équations Fonct.", "Inégalités"] %>

<% provide(:title, @user.name) %>

<% t1 = Time.now %>

<!-- Test pour la performance -->
<% montretemps = 0 %>
<% if(params.has_key?:montretemps) %>
  <% montretemps = params[:montretemps].to_i %>
<% end %>

<!-- Style pour la barre de défilement dans le tableau -->
<style type="text/css">

html>body thead.fixed tr {
  display: block;
}

html>body tbody.scroll {
  display: block;
  max-height: 440px;
  overflow-y: scroll;
  width: 100%;
}
</style>

<% nb_corrections = @user.followings.count %>
  
<% if !@user.admin %>
  <% actualrating = @user.rating %>
  <% niveau = @user.level %>
  <% couleur = niveau[:color] %>
  <% status = niveau[:name] if @user.sex == 0 %>
  <% status = niveau[:femininename] if @user.sex == 1 %>
<% else %>
  <% couleur = "black" %>
  <% status = "Administrateur" if @user.sex == 0 %>
  <% status = "Administratrice" if @user.sex == 1 %>
<% end %>

<!-- Titre avec le nom et le niveau -->
<h1><%= raw(@user.colored_name) %>
<span style="margin-left:25px; color:<%= couleur %>;">-</span><span style="margin-left:30px; color:<%= couleur %>;"><%= status %></span>
<% if signed_in? && current_user.sk.admin && (!@user.admin || current_user.sk.root) %>
  <span style="color:<%= couleur %>; margin-left:50px; font-size:18px;">(<%= @user.email %><%= " - email non confirmé" if !@user.email_confirm %>)</span>
<% end %>

<% if signed_in? && current_user.sk != @user %>
  <span style="float:right;"><%= link_to "Envoyer un message", new_discussion_path(:qui => @user), :class => "btn btn-default btn-grey" %></span>
<% end %>
</h1>
  
<% if nb_corrections > 0 %>
  <%= @user.name %> a participé à la correction de <b><%= nb_corrections %></b> soumission<%= "s" if nb_corrections > 1 %> sur le site, merci à <%= "lui" if @user.sex == 0 %><%= "elle" if @user.sex == 1 %> !<br/>
<% end %>

<% if !@user.admin %>

  <!-- On détermine ce que la personne peut voir ou ne pas voir -->
  <% cansee = Array.new %>

  <% section_fondation = Array.new %>
  <% Section.all.to_a.each do |s| %>
    <% section_fondation[s.id] = s.fondation %>
  <% end %>

  <% if signed_in? && current_user.sk.admin %>
    <% Chapter.all.to_a.each do |c| %>
      <% cansee[c.id] = true %>
    <% end %>
  <% else %>
    <% debloque = Array.new %>
    <% Chapter.all.to_a.each do |c| %>
      <% debloque[c.id] = false %>
    <% end %>

    <% if signed_in? %>
      <% current_user.sk.chapters.each do |c| %>
        <% debloque[c.id] = true %>
      <% end %>
    <% end %>

    <% Chapter.all.to_a.each do |c| %>
      <% cansee[c.id] = true %>
      <% if !section_fondation[c.section_id] %>
        <% c.prerequisites.each do |p| %>
          <% if !section_fondation[p.section_id] && !debloque[p.id] %>
            <% cansee[c.id] = false %>
          <% end %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>

  <% enough_points = false %>
  <% if signed_in? && (current_user.sk.admin? || current_user.sk.rating >= 200) %>
    <% enough_points = true %>
  <% end %>

  <!-- Affichage des résolutions -->
  <div class="row">

  <div class="col-lg-7 col-sm-12 col-xs-12">
  <h2>Résolutions</h2>

  <!-- On va parcourir tous les exercices, qcms et problèmes -->

  <% exercises = @user.solvedexercises.where(:correct => true).order("resolutiontime DESC") %>
  <% exercises_size = exercises.size %>
  <% qcms = @user.solvedqcms.where(:correct => true).order("resolutiontime DESC") %>
  <% qcms_size = qcms.size %>
  <% problems = @user.solvedproblems.order("truetime DESC") %>
  <% problems_size = problems.size %>

  <% act = Array.new %>
  <% e_encours = 0 %>
  <% q_encours = 0 %>
  <% p_encours = 0 %>

  <% nb_e = 0 %>
  <% nb_p = 0 %>
  <% nb_erreur = 0 %>
  <% allchap = Array.new %>
  <% allex = Array.new %>
  <% allqcm = Array.new %>
  <% allpb = Array.new %>
	
  <% maxscore = Array.new %>
  <% numberexo = 0 %>
  <% numberpb = 0 %>

  <% Section.all.each do |s| %>
    <% maxscore[s.id] = s.max_score %>
  <% end %>

  <% Chapter.all.each do |c| %>
    <% allchap[c.id] = c %>
  <% end %>

  <% Exercise.all.each do |e| %>
    <% allex[e.id] = e %>
    <% if e.level > 0 && e.online %>
      <% numberexo = numberexo+1 %>
    <% end %>
  <% end %>

  <% Qcm.all.each do |q| %>
    <% allqcm[q.id] = q %>
    <% if q.level > 0 && q.online %>
      <% numberexo = numberexo+1 %>
    <% end %>
  <% end %>

  <% Problem.all.each do |p| %>
    <% allpb[p.id] = p %>
    <% if p.online %>
      <% numberpb = numberpb+1 %>
    <% end %>
  <% end %>

  <% premier = nil %>
  <% dernier = nil %>

  <% (1..(exercises_size+qcms_size+problems_size)).each do |i| %>
    <% trouve = false %>
    <% besttime = 0 %>
    <% bestqui = -1 %>

    <% if e_encours < exercises_size && (!trouve || exercises[e_encours].resolutiontime.to_i > besttime) %>
      <% besttime = exercises[e_encours].resolutiontime.to_i %>
      <% trouve = true %>
      <% bestqui = 1 %>
    <% end %>
    <% if q_encours < qcms_size && (!trouve || qcms[q_encours].resolutiontime.to_i > besttime) %>
      <% besttime = qcms[q_encours].resolutiontime.to_i %>
      <% trouve = true %>
      <% bestqui = 2 %>
    <% end %>
    <% if p_encours < problems_size && (!trouve || problems[p_encours].truetime.to_i > besttime) %>
      <% besttime = problems[p_encours].truetime.to_i %>
      <% trouve = true %>
      <% bestqui = 3 %>
    <% end %>

    <% if bestqui == 1 %>
      <% e = exercises[e_encours] %>
      <% exo = allex[e.exercise_id] %>
      <% pt = exo.value %>
      <% if pt > 0 %>
        <% nb_erreur = nb_erreur + [e.nb_guess-1, 20].min %>
        <% nb_e = nb_e+1 %>
        <% dernier = e.resolutiontime.in_time_zone %>
        <% if premier.nil? %>
          <% premier = e.resolutiontime.in_time_zone %>
        <% end %>
      <% end %>
      <% e_encours = e_encours + 1 %>
      <% act.push({:time => e.resolutiontime, :type => 2, :id => e.exercise_id, :pt => pt, :chapter => allchap[exo.chapter_id].name, :c_id => exo.chapter_id, :section => allchap[exo.chapter_id].section_id, :fondation => (pt == 0)}) %>
    <% elsif bestqui == 2 %>
      <% q = qcms[q_encours] %>
      <% qcm = allqcm[q.qcm_id] %>
      <% pt = qcm.value %>
      <% if pt > 0 %>
        <% nb_e = nb_e+1 %>
        <% nb_erreur = nb_erreur + [q.nb_guess-1, 20].min %>
        <% dernier = q.resolutiontime.in_time_zone %>
        <% if premier.nil? %>
          <% premier = q.resolutiontime.in_time_zone %>
        <% end %>
      <% end %>
      <% q_encours = q_encours + 1 %>
      <% act.push({:time => q.resolutiontime, :type => 3, :id => q.qcm_id, :pt => pt, :chapter => allchap[qcm.chapter_id].name, :c_id => qcm.chapter_id, :section => allchap[qcm.chapter_id].section_id, :fondation => (pt == 0)}) %>
    <% elsif bestqui == 3 %>
      <% p = problems[p_encours] %>
      <% pb = allpb[p.problem_id] %>
      <% pt = pb.value %>
      <% nb_p = nb_p+1 %>
      <% peutvoir = enough_points %>
      <% t = pb.virtualtest_id %>
      <% if t == 0 && (!signed_in? || !current_user.sk.admin?) %>
        <% pb.chapters.each do |c| %>
          <% peutvoir = false if !debloque[c.id] %>
        <% end %>
      <% end %>
      <% if t != 0 && (!signed_in? || !current_user.sk.admin?) %>
        <% peutvoir = false if (!signed_in? || current_user.sk.status(t) <= 0) %>
      <% end %>
      <% p_encours = p_encours + 1 %>
      <% dernier = p.truetime.in_time_zone %>
      <% if premier.nil? %>
        <% premier = p.truetime.in_time_zone %>
      <% end %>
      <% act.push({:time => p.truetime, :type => 4, :id => p.problem_id, :sub => p.submission_id, :peutvoir => peutvoir, :pt => pt, :number => pb.number, :level => pb.level, :section => pb.section_id, :fondation => false}) %>
    <% end %>
  <% end %>

  <% actperday = Array.new %>

  <% previousdate = Date.new(1980,1,1) %>
  <% encours = -1 %>

  <% parquoi = "" %>

  <% inscription = @user.created_at %>

  <!-- Si l'étudiant a déjà fait au moins un truc -->
  <% if act.size > 0 %>

    <!-- On détermine si on rassemble les actes par minute, heure ou jour -->
    <% if !premier.nil? %>
      <% if dernier.day != DateTime.now.in_time_zone.day || dernier.month != DateTime.now.in_time_zone.month || dernier.year != DateTime.now.in_time_zone.year %>
        <% parquoi = "jour" %>
      <% elsif dernier.hour < premier.hour - 1 %>
        <% parquoi = "heure" %>
      <% else %>
        <% parquoi = "minute" %>
      <% end %>
    <% end %>
    
    <% moyenne_erreurs = (nb_erreur/nb_e.to_f).round(2) %>

    <!-- Début du tableau des résolutions (cas normal) -->
    <table class="table table-bordered hidden-xs" style="width:606px;">
    <thead class="fixed">
    <tr><th style="width:150px;">Date</th><th style="width:50px;"><center>Heure</center></th><th style="width:340px;">Quoi</th><th style="width:66px;"><center>Points</center></th></tr>
    </thead>
    <tbody class="scroll">
  <% end %>

  <!-- On parcourt les actes un par un (cas normal) -->
  <% act.each do |a| %>

    <!-- Rassemblement par date des actes -->
    <% date = a[:time].in_time_zone %>

    <% if parquoi == "jour" %>
      <% dateday = Time.zone.local(date.year, date.month, date.day, 0, 0, 0) %>
    <% elsif parquoi == "heure" %>
      <% dateday = Time.zone.local(date.year, date.month, date.day, date.hour, 0, 0) %>
    <% else %>
      <% dateday = Time.zone.local(date.year, date.month, date.day, date.hour, date.min, 0) %>
    <% end %>

    <% if a[:pt] > 0 %>
      <% if dateday != previousdate %>
        <% encours = encours+1 %>
        <% actperday.push({:time => dateday, :pt => a[:pt], :chapter => a[:chapter]}) %>
      <% else %>
        <% actperday[encours][:pt] = actperday[encours][:pt] + a[:pt] %>
      <% end %>
      <% previousdate = dateday %>
    <% end %>

    <!-- Affichage de la ligne -->
    <tr style="background-color:<%= Section.color(a[:section]) %>;">

    <!-- Date -->
    <td style="width:150px;"><%= write_date_only(date) %></td>

    <!-- Heure -->
    <td style="width:50px;"><center> <%= date.hour %>h<%= "0" if date.min < 10 %><%= date.min %></center></td>

    <!-- Quoi -->
    <td style="width:340px;">
    <% if a[:type] <= 3 %>
      <% if cansee[a[:c_id]] %>
        <%= link_to "Exercice", chapter_path(a[:c_id], :type => a[:type], :which => a[:id]) %>
      <% else %>
        Exercice
      <% end %>
      <%= "(#{a[:chapter]})" %>
    <% else %>
      <% if a[:peutvoir] %>
        <%= link_to "Problème ##{a[:number]}", problem_path(a[:id], :sub => a[:sub]) %>
      <% else %>
        Problème #<%= a[:number] %>
      <% end %>
      <%= "(Niveau #{a[:level]})" %>
    <% end %>
    </td>

    <!-- Points -->
    <td style="width:50px;">
    <center>
      <%= "+ #{a[:pt]}" if a[:pt] > 0 %>
    </center>
    </td>
    </tr>

  <% end %>

  <% if act.size > 0 %>
    </tbody>
    </table>
  <% else %>
    <div class="hidden-xs"><b>Aucune activité.</b></div>
  <% end %>

  <!-- Début du tableau des résolutions (cas gsm) -->
  <% if act.size > 0 %>
    <table class="table table-bordered visible-xs" style="width:356px;">
    <thead class="fixed">
    <tr><th style="width:150px;">Date</th><th style="width:140px;">Quoi</th><th style="width:66px;"><center>Points</center></th></tr>
    </thead>
    <tbody class="scroll">
  <% end %>

  <!-- On parcourt les actes un par un (cas gsm) -->
  <% act.each do |a| %>
    <% date = a[:time].in_time_zone %>

    <tr style="background-color:<%= Section.color(a[:section]) %>;">

    <!-- Date -->
    <td style="width:150px;"><%= write_date_only(date) %></td>

    <!-- Quoi -->
    <td style="width:140px;">
    <% if a[:type] <= 3 %>
      <% if cansee[a[:c_id]] %>
        <%= link_to "Exercice", chapter_path(a[:c_id], :type => a[:type], :which => a[:id]) %>
      <% else %>
        Exercice
      <% end %>
    <% else %>
      <% if a[:peutvoir] %>
        <%= link_to "Problème ##{a[:number]}", problem_path(a[:id], :sub => a[:sub]) %>
      <% else %>
        Problème #<%= a[:number] %>
      <% end %>
    <% end %>
    </td>

    <!-- Points -->
    <td style="width:50px;">
    <center>
      <%= "+ #{a[:pt]}" if a[:pt] > 0 %>
    </center>
    </td>
    </tr>

  <% end %>

  <% if act.size > 0 %>
    </tbody>
    </table>
  <% else %>
    <div class="visible-xs"><b>Aucune activité.</b></div>
  <% end %>

  </div>

  <!-- Affichage du score et des statistiques -->
  <div class="col-lg-5 col-sm-12 col-xs-12">
	
  <!-- Si le score vaut 0, on n'affiche pas tout -->
  <% if actualrating == 0 %>
    <center><p style="font-size:24px; margin-top:60px;">Score : 0</p></center>
  <% else %>
    <center><p style="font-size:24px; margin-top:20px;">Score : <%= actualrating %></p></center>
    <br/>
    
    <% p = Pointspersection.where(:user_id => @user) %>
    
    <table class="table table-bordered">
    <tr><th colspan="2" style="text-align:center;">Progression par type</th></tr>
    <tr>
    <td style="width:160px;">Exercices</td>
    <td>
    <% pct = numberexo == 0 ? 0 : 100*nb_e/numberexo.to_f %>
    <div class="progress" style="margin-bottom:0px;">  		
    <div class="progress-bar" role="progressbar"
    aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:<%= pct %>%; background-color:#BBDDFF; color:black;">
      <% if nb_e == 0 %>
      <% else %>
        <span style="margin-left:5px"><%= nb_e %>/<%= numberexo %></span>
      <% end %>
    </div>
    </div>
    </td>
    </tr>
		
    <td style="width:160px;">Problèmes</td>
    <td>
    <% pct = numberpb == 0 ? 0 : 100*nb_p/numberpb.to_f %>
    <div class="progress" style="margin-bottom:0px;">  		
    <div class="progress-bar" role="progressbar"
    aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:<%= pct %>%; background-color:#BBDDFF; color:black;">
      <% if nb_p == 0 %>
      <% else %>
        <span style="margin-left:5px"><%= nb_p %>/<%= numberpb %></span>
      <% end %>
    </div>
    </div>
    </td>
    </tr>
    
    <table class="table table-bordered">
    <tr><th colspan="2" style="text-align:center;">Progression par section</th></tr>
    <% Section.order(:id).where(:fondation => false).each do |s| %>
      <tr>
      <td style="width:160px;"><%= abreviation[s.id-1] %></td>
      <% rate = p.where(:section_id => s.id).first.points %>
      <td>
      <% pct = maxscore[s.id] == 0 ? 0 : 100*rate/maxscore[s.id].to_f %>
      <div class="progress" style="margin-bottom:0px;">
      <div class="progress-bar" role="progressbar"
      aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:<%= pct %>%; background-color:<%= Section.color(s.id) %>; color:black;">
        <% if pct.floor == 0 	%>
        <% else %>
          <span style="margin-left:5px"><%= pct.floor %>%</span>
        <% end %>
      </div>
      </div>
      </td>
      </tr>
    <% end %>
    </table>
    
  <% end %>
  
  <!-- Date d'inscription -->
  <br/>
  <center><b>Inscription</b> : <%= write_date_only(inscription.in_time_zone) %></center><br/>

  </div>

  </div>
  
  
  <% if signed_in? && current_user.sk.admin %>
    <div class="row">
    <div class="col-sm-12 col-xs-12">
      <h2>Informations</h2>
      <%= @user.country %> - <%= @user.year %><br/>
    <% if act.size > 0 %>
      <%= moyenne_erreurs %> erreurs/exercice<br/>
    <% end %>
    <% lastco = @user.last_connexion %>
    Dernière connexion : <%= write_date_only(lastco.in_time_zone) %><br/>
    <%= "Groupe Wépion" if @user.wepion %> <%= " - Groupe " << @user.group if @user.group != "" %>
    </div>
    </div>
  <% end %>

  <!-- Si l'étudiant a un score non égal à 0, on montre son évolution -->
  <% if actualrating > 0 %>

    <div class="row">

    <div class="col-sm-12 col-xs-12">

    <h2>Évolution</h2>
    <br/>
    <center>

    <!-- Endroit pour dessiner l'évolution -->
    <div id="contenant" style="width:100%; max-width:900px; height:480px; position:relative; display:block;">
    <canvas id="myCanvas" width="900" height="480" style="position:absolute; left:0px; top: 0px;">
    Votre navigateur ne supporte pas les canvas.
    </canvas>

    </div>
    </center>

    <!-- Script pour le graphique de l'évolution -->
    <% @niveaux = Color.order(:pt).to_a %>

    <% i = 1 %>
    <% numerolevel = 0 %>

    <% @niveaux.each do |n| %>
      <% if niveau.id == n.id %>
        <% numerolevel = i %>
      <% end %>
      <% i = i+1 %>
    <% end %>

    <% nombrelevel = i-1 %>

    <% maxi = 0 %>


    <% if numerolevel == nombrelevel %>
      <% maxi = 1.2*actualrating %>
    <% else %>
      <% maxi = 1.1*@niveaux[numerolevel][:pt] %>
    <% end %>

    <script type="text/javascript">
      $(document).ready( function(){

      //Get the canvas & context
      var c = $('#myCanvas');
      var ctx = c.get(0).getContext('2d');
      var container = $(c).parent();

      //Run function when browser  resize
      $(window).resize( respondCanvas );

      function respondCanvas(){
      c.attr('width', $(container).width() ); //max width
      c.attr('height', 480*$(container).width()/900.0); //max height

      document.getElementById('contenant').style.height = 480*$(container).width()/900.0 + "px"

      //Redraw & reposition content
      var x = c.width();
      var y = c.height();

      var pct = c.width()/900.0;

      <% i = 1 %>

      var prec = 1000;

      // Affichage des niveaux avec couleurs
      <% @niveaux.each do |n| %>
        <% if i > 1 %>
          <% haut = [450 - 450*(n.pt/maxi), 0].max %>
          <% if haut > 0 %>
            ctx.font="14px Arial";
            ctx.fillStyle = 'black';
            ctx.textAlign = 'right';

            if (pct > 0.7){

              if (pct * <%= haut %> < prec - 13){
                ctx.fillText(<%= n.pt %>,pct*44,pct*<%= haut+10 %>);
                prec = pct * <%= haut %>;
              }
            }
          <% end %>
        <% end %>

        // Calcul du bas et du haut
        <% if i == nombrelevel %>
          <% bas = [450 - 450*(n.pt/maxi), 0].max %>
          <% haut = 0 %>
        <% else %>
          <% bas = [450 - 450*(n.pt/maxi), 0].max %>
          <% haut = [450 - 450*(@niveaux[i].pt/maxi), 0].max %>
        <% end %>
        <% if bas > haut %>
          ctx.beginPath();
          ctx.rect(pct*50, pct*<%= haut+5 %>, pct*806, pct*<%= bas - haut %>);
          ctx.fillStyle = '<%= n.font_color %>';
          ctx.fill();
        <% end %>
        <% i = i+1 %>
      <% end %>


      // On trace maintenant le graphique

      <% last = actperday.first[:time].to_time.to_i %>

      // Commencement du graphique
      <% if parquoi == "jour" %>
        <% first = actperday.last[:time].to_time.to_i - 86400%>
      <% elsif parquoi == "heure" %>
        <% first = actperday.last[:time].to_time.to_i - 3600 %>
      <% else %>
        <% first = actperday.last[:time].to_time.to_i - 60 %>
      <% end %>

      <% previousw = 2000 %>
      
      ctx.font="12px Arial";
      ctx.fillStyle = 'black';
      ctx.textAlign = 'center';
      ctx.setLineDash([10, 10]);
      ctx.beginPath();
      ctx.lineWidth = 1;
      ctx.strokeStyle = 'black';

      // De droite vers la gauche : calcul où on met les verticales pointillées
      <% actperday.each do |a| %>
        <% w = 3 + 800*(a[:time].to_time.to_i - first)/(last-first) %>

        <% if previousw - w > 50 %>
          if (pct > 0.7){
          <% if parquoi == "jour" %>
            ctx.fillText("<%= "0" if a[:time].day < 10 %><%= a[:time].day %>/<%= "0" if a[:time].month < 10 %><%= a[:time].month %>/<%= "0" if (a[:time].year % 2000) < 10 %><%= (a[:time].year % 2000) %>",pct*<%= 50+w %>,pct*471);
          <% elsif parquoi == "heure" %>
            ctx.fillText("<%= "0" if a[:time].hour < 10 %><%= a[:time].hour %>h",pct*<%= 50+w %>,pct*471);
          <% else %>
            ctx.fillText("<%= "0" if a[:time].hour < 10 %><%= a[:time].hour %>h<%= "0" if a[:time].min < 10 %><%= a[:time].min %>",pct*<%= 50+w %>,pct*471);
          <% end %>
          }
          ctx.moveTo(pct*<%= 50+w %>, pct*5);
          ctx.lineTo(pct*<%= 50+w %>, pct*455);
          <% previousw = w %>
        <% end %>
      <% end %>
      
      ctx.stroke();
      ctx.setLineDash([]);

      <% w = 3 %>
      <% r = 0 %>
      <% previousr = r %>
      <% h = 450 %>
      
      ctx.beginPath();
      ctx.lineWidth = 3;
      ctx.fillStyle = 'white';
      ctx.strokeStyle = 'white';
      ctx.moveTo(pct*<%= 50+w %>, pct*<%= h+5 %>);

      // De gauche vers la droite : on trace le graphe
      <% actperday.reverse.each do |a| %>
        <% w = 3 + 800*(a[:time].to_time.to_i - first)/(last-first) %>
        <% r = previousr + a[:pt] %>
        <% previousr = r %>
        <% h = 450 - 450*(r/maxi) %>
        ctx.lineTo(pct*<%= 50+w %>, pct*<%= h+5 %>);
      <% end %>
      
      ctx.stroke();
      
      <% w = 3 %>
      <% r = 0 %>
      <% previousr = r %>
      <% h = 450 %>
      
      // De gauche vers la droite : on met les points
      <% actperday.reverse.each do |a| %>
        <% w = 3 + 800*(a[:time].to_time.to_i - first)/(last-first) %>
        <% r = previousr + a[:pt] %>
        <% previousr = r %>
        <% h = 450 - 450*(r/maxi) %>  
        ctx.beginPath();      
        ctx.arc(pct*<%= 50+w %>, pct*<%= h+5 %>, 4, 0, 2 * Math.PI, true);
        ctx.fill();
      <% end %>
      
      // Contour du canvas
      ctx.beginPath();
      ctx.rect(pct*50, pct*5, pct*806, pct*450);
      ctx.lineWidth = 2;
      ctx.strokeStyle = 'black';
      ctx.stroke();

      }

      //Initial call
      respondCanvas();

      });

    </script>

    </div>
    </div>

    <h2>Comparaison</h2>

    <form action="<%= compare_path %>" method="get" class="form-inline">
      Comparer
      <div class="visible-xs" style="height:5px;"></div>
      <%= select_tag :id1, options_for_select(User.where("rating != 0 AND admin = ?", false).order("rating DESC, last_name ASC, first_name ASC").collect {|u| [ u.name, u.id ] }, @user.id), :class => "form-control", :style => "margin-left:10px; margin-right:10px;" %>
      <div class="visible-xs" style="height:5px;"></div>
      avec
      <div class="visible-xs" style="height:5px;"></div>
      <%= select_tag :id2, options_for_select(User.where("rating != 0 AND admin = ?", false).order("rating DESC, last_name ASC, first_name ASC").collect {|u| [ u.name, u.id ] }), :class => "form-control", :style => "margin-left:10px; margin-right:10px;" %>
      <div class="visible-xs" style="height:7px;"></div>
      <%= button_tag "Comparer !", class: "btn btn btn-primary", name: "" %>
    </form>

  <% end %>

<% end %>

<!-- Si administrateur, différentes options -->
<% if signed_in? && current_user.sk.admin? %>
  <br/><br/>
  <center>
  <% i = 0 %>
    <% if !@user.root && (!@user.admin || current_user.sk.root) %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <% if @user.active %>
        <%= link_to "Interdire l'accès", user_switchactivate_path(@user), data: { confirm: "Êtes-vous sûr de vouloir interdire l'accès au site à #{@user.name} ?" } %>
      <% else %>
        <%= link_to "Rendre l'accès", user_switchactivate_path(@user), data: { confirm: "Êtes-vous sûr de vouloir rendre l'accès au site à #{@user.name} ?" } %>
      <% end %>
    <% end %>
    <% if current_user.sk.root? && !@user.root? %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <%= link_to 'Supprimer', @user, method: :delete, data: { confirm: "ATTENTION : Ne supprimez un utilisateur que s'il s'agit d'un robot ou d'une personne mal intentionnée. Cette action supprimera tous ses messages et toutes ses données. Privilégiez une interdiction d'accès si possible. Notez que cet utilisateur a ouvert #{@user.subjects.count} sujet(s) et a écrit #{@user.messages.count} message(s) sur le forum, tout sera supprimé ! Êtes-vous sûr de vouloir supprimer #{@user.name} ?" }, :style => "color:red;" %>
    <% end %>
    <% if @user.email_confirm && !@user.admin %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <%= link_to 'Voir le site comme lui', user_take_skin_path(@user), data: { confirm: "Vous allez voir tout le site comme #{@user.name} le voit." } %>
    <% end %>
    <% if current_user.sk.root && !@user.admin %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <%= link_to 'Rendre administrateur', user_add_administrator_path(@user), data: { confirm: "Êtes-vous sûr de vouloir rendre #{@user.name} administrateur ? Vous ne pourrez plus revenir en arrière !"}, :style => "color:red;" %>
    <% end %>
    <% if current_user.sk.root && !@user.admin %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <% if !@user.corrector %>
        <%= link_to 'Rendre correcteur', user_switch_corrector_path(@user), data: { confirm: "Êtes-vous sûr de vouloir rendre #{@user.name} correcteur ?"}, :style => "color:red;" %>
      <% else %>
        <%= link_to 'Retirer des correcteurs', user_switch_corrector_path(@user), data: { confirm: "Êtes-vous sûr de vouloir retirer #{@user.name} des correcteurs ?"}, :style => "color:red;" %>
      <% end %>
    <% end %>
    <% if current_user.sk.admin && !@user.admin %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      <% if @user.wepion %>
        <%= link_to 'Retirer du groupe Wépion', user_switch_wepion_path(@user) %>
      <% else %>
        <%= link_to 'Ajouter au groupe Wépion', user_switch_wepion_path(@user) %>
      <% end %>
    <% end %>
    <% if current_user.sk.admin && @user.wepion %>
      <%= " | " if i > 0 %>
      <% i = i+1 %>
      Groupe <%= link_to 'A', user_change_group_path(@user, :group => "A") %>, <%= link_to 'B', user_change_group_path(@user, :group => "B") %>, <%= link_to 'aucun', user_change_group_path(@user, :group => "") %>
    <% end %>
  </center>
<% end %>

<% t2 = Time.now %>

<% if montretemps == 1 %>
  <br/>Temps de chargement : <%= t2-t1 %> secondes.
<% end %>
